<%- include ../partials/header %>  <%- include ../partials/categories-navbar %>
<div class="container">
  <!-- Flash messages -->
  <div class="row mt-3 mb-3">
    <div class="col-md-12 m-auto">
      <% if (successMsg) { %>
      <div id="success" class="alert alert-success">
        <%= successMsg %>
      </div>
      <% } else { %>
      <div id="success" class="alert alert-success d-none"></div>
      <% } %>
    </div>
    <div class="col-md-12 m-auto">
      <% if (errorMsg) { %>
      <div id="error" class="alert alert-danger">
        <%= errorMsg %>
      </div>
      <% } else { %>
      <div id="error" class="alert alert-danger d-none"></div>
      <% } %>
    </div>
  </div>
  <!-- Product info -->
  <div class="row mt-4 mb-4">
    <div class="col-md-5 mt-2 mr-2 ml-auto">
      <img
        src="<%=product.imagePath%>"
        class="img-fluid product-img"
        alt="product image"
      />
    </div>
    <div class="col-md-5 mt-2 mb-2 ml-2 mr-auto text-dark">
      <h2><%=product.title%></h2>
      <hr />
      <p class="price">USD $<%=product.price%></p>
      <p class="lead"> Description: 
        <p><%=product.description%></p>
      </p>
      
      <p><strong>Category:</strong> <%=product.category.title%></p>
      <p><strong>Brand: </strong><%=product.manufacturer%></p>
      <p><strong>Product code:</strong> <%=product.productCode%></p>
      <p><strong>Date added to the store:</strong> <%= moment(product.createdAt).format( 'MMMM Do YYYY')%></p>
      <% if(product.quantity > 0) {%>
      <p class="is-available text-center btn btn-block btn-secondary mt-3 mb-3 button-style" style="background-color: #295C3D; color: #fff; font-weight: bold; cursor: default; border: none;">In stock</p>
      <button class="btn btn-block btn-secondary mt-3 mb-3 button-style add-to-cart" data-id="<%=product._id%>">
        Add to Shopping Cart
      </button>
      <div id="cart-message" class="alert alert-info mt-2" style="display:none"></div>
      <% } else { %>
      <p class="is-not-available text-center" style="color: red;">Out of stock</p>
      <%} %>
    </div>
  </div>
</div>

<!-- Reviews Section -->
<div class="container mb-5">
  <div class="row">
    <div class="col-md-8 m-auto">
      <h3>Product Reviews</h3>
      <div id="average-rating" class="mb-2"></div>
      <div id="reviews-list">Loading reviews...</div>
      <div id="review-form-section" class="mt-4"></div>
    </div>
  </div>
</div>

<script>
const addToCartBtn = document.querySelector('.add-to-cart');
if (addToCartBtn) {
  addToCartBtn.addEventListener('click', async function() {
    const productId = this.dataset.id;
    const token = localStorage.getItem('token');
    if (!token) {
      window.location.href = '/user/signin';
      return;
    }
    try {
      const response = await fetch(`/add-to-cart/${productId}`, {
        method: 'POST',
        headers: { 'Authorization': `Bearer ${token}` }
      });
      const data = await response.json();
      const msgDiv = document.getElementById('cart-message');
      if (data.success) {
        msgDiv.textContent = 'Item added to cart successfully!';
        msgDiv.className = 'alert alert-success mt-2';
        msgDiv.style.display = 'block';
        if (window.updateCartBadge) window.updateCartBadge();
      } else {
        msgDiv.textContent = data.message || 'Error adding item to cart';
        msgDiv.className = 'alert alert-danger mt-2';
        msgDiv.style.display = 'block';
      }
    } catch (error) {
      const msgDiv = document.getElementById('cart-message');
      msgDiv.textContent = 'Error adding item to cart';
      msgDiv.className = 'alert alert-danger mt-2';
      msgDiv.style.display = 'block';
    }
  });
}

const productId = "<%= product._id %>";

function renderStars(rating) {
  let html = '';
  for (let i = 1; i <= 5; i++) {
    html += `<span class="fa fa-star${i <= rating ? ' checked text-warning' : ''}"></span>`;
  }
  return html;
}

async function fetchReviews() {
  const res = await fetch(`/products/${productId}/reviews`);
  const data = await res.json();
  if (data.success) {
    let sum = 0;
    let html = '';
    if (data.reviews.length === 0) {
      html = '<div class="alert alert-info">No reviews yet.</div>';
    } else {
      data.reviews.forEach(r => {
        sum += r.rating;
        html += `<div class='card mb-2'><div class='card-body'>
          <div class='d-flex align-items-center mb-2'>
            ${r.user.profile && r.user.profile.avatar ? `<img src='${r.user.profile.avatar}' alt='avatar' style='width:40px;height:40px;border-radius:50%;margin-right:10px;'>` : ''}
            <strong>${r.user.username}</strong>
            <span class='ml-3'>${renderStars(r.rating)}</span>
            <span class='ml-2 text-muted' style='font-size:0.9em;'>${new Date(r.createdAt).toLocaleString()}</span>
            ${window.currentUserId && r.user._id === window.currentUserId ? `<button class='btn btn-sm btn-danger ml-auto' onclick='deleteReview("${r._id}")'>Delete</button>` : ''}
          </div>
          <p>${r.comment}</p>
        </div></div>`;
      });
    }
    document.getElementById('reviews-list').innerHTML = html;
    // Average rating
    const avg = data.reviews.length ? (sum / data.reviews.length).toFixed(1) : 0;
    document.getElementById('average-rating').innerHTML = `<strong>Average Rating:</strong> ${renderStars(Math.round(avg))} <span class='ml-2'>(${avg} / 5 from ${data.reviews.length} review${data.reviews.length === 1 ? '' : 's'})</span>`;
  } else {
    document.getElementById('reviews-list').innerHTML = '<div class="alert alert-danger">Error loading reviews.</div>';
  }
}

function renderReviewForm() {
  const token = localStorage.getItem('token');
  if (!token) {
    document.getElementById('review-form-section').innerHTML = '<div class="alert alert-info">Sign in to add a review.</div>';
    return;
  }
  document.getElementById('review-form-section').innerHTML = `
    <h5>Add Your Review</h5>
    <form id="review-form">
      <div class="form-group">
        <label for="rating">Rating</label>
        <select class="form-control w-25" id="rating" name="rating" required>
          <option value="">Select</option>
          <option value="1">1</option>
          <option value="2">2</option>
          <option value="3">3</option>
          <option value="4">4</option>
          <option value="5">5</option>
        </select>
      </div>
      <div class="form-group">
        <label for="comment">Comment</label>
        <textarea class="form-control" id="comment" name="comment" rows="3" required></textarea>
      </div>
      <button type="submit" class="btn btn-primary">Submit Review</button>
      <div id="review-msg" class="mt-2"></div>
    </form>
  `;
  document.getElementById('review-form').addEventListener('submit', async function(e) {
    e.preventDefault();
    const rating = document.getElementById('rating').value;
    const comment = document.getElementById('comment').value;
    const token = localStorage.getItem('token');
    try {
      const res = await fetch(`/products/${productId}/reviews`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${token}`
        },
        body: JSON.stringify({ rating, comment })
      });
      const data = await res.json();
      const msgDiv = document.getElementById('review-msg');
      if (data.success) {
        msgDiv.innerHTML = `<div class='alert alert-success'>${data.message}</div>`;
        fetchReviews();
        document.getElementById('review-form').reset();
      } else {
        msgDiv.innerHTML = `<div class='alert alert-danger'>${data.message}</div>`;
      }
    } catch (error) {
      document.getElementById('review-msg').innerHTML = `<div class='alert alert-danger'>Error submitting review.</div>`;
    }
  });
}

async function deleteReview(reviewId) {
  if (!confirm('Are you sure you want to delete this review?')) return;
  const token = localStorage.getItem('token');
  try {
    const res = await fetch(`/products/${productId}/reviews/${reviewId}`, {
      method: 'DELETE',
      headers: { 'Authorization': `Bearer ${token}` }
    });
    const data = await res.json();
    if (data.success) {
      fetchReviews();
    } else {
      alert(data.message || 'Error deleting review.');
    }
  } catch (error) {
    alert('Error deleting review.');
  }
}

// Get current user id for delete button logic
window.currentUserId = null;
(async function() {
  const token = localStorage.getItem('token');
  if (token) {
    try {
      const res = await fetch('/user/profile/data', { headers: { 'Authorization': `Bearer ${token}` } });
      const data = await res.json();
      if (data.success) window.currentUserId = data.user.id;
    } catch {}
  }
  fetchReviews();
  renderReviewForm();
})();
</script>

<%- include ../partials/footer %>
